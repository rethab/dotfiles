[include]
    path = ~/.gitconfig.local
[core]
    editor = vim
[user]
    name = Reto
    useConfigOnly = true
[help]
    autocorrect = 0
[push]
    default = current
    autoSetupRemote = true
[pull]
    rebase = merges
    default = current
[init]
    defaultBranch = main
[color]
    diff = auto
    status = auto
    branch = auto
    grep = always
[color "grep"]
    filename = green
    linenumber = blue
    separator = white
[color "status"]
    changed = yellow
    added = green
    untracked = red
[status]
    submoduleSummary = true
    showUntrackedFiles = all
[merge]
    # merge with no argument merges with upstream
    defaultToUpstream = true 
[rebase]
    autosquash = true
[diff]
    compactionHeuristic = true
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[diff "zip"]
    textconv = unzip -v
[diff "pdf"]
    textconv = pdfinfo
[diff "bin"]
    textconv = hexdump -v -C
[alias]
    ru           = rebase @{upstream}
    recent       = "!f() { git branch --sort=-committerdate | head -n 5; }; f"
    pp           = "!f() { git pull; git push; }; f"
    car          = commit -a --amend -C HEAD
    praise       = blame
    pus          = push
    cp           = cherry-pick
    fm           = merge --ff-only
    fl           = push --force-with-lease
    prettygraph  = log --graph --simplify-by-decoration --pretty=format:'%d' --all
    showbranches = branch --list -r
    showtags     = tag --list
    difl         = diff --word-diff=color --word-diff-regex=.
    difw         = diff --word-diff=color
    difc         = diff --cached
    diffcsv      = diff --word-diff=color --word-diff-regex="[^;[:space:]]+"
    search       = log --grep
    ls           = log --oneline --decorate
    lr           = reflog show --date=relative
    hash         = "!f() { git log --oneline | grep $1 | awk '{print $1}'; }; f"
    lsu          = "!f() { git ls-files -v | grep '^[[:lower:]]'; }; f"
    sshow        = "!f() { git stash show stash^{/$*} -p; }; f"
    sapply       = "!f() { git stash apply stash^{/$*}; }; f"
[rerere]
    enabled = 1
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[credential]
    helper = store
[column]
	ui = auto
[branch]
	sort = -committerdate
[tag]
	sort = version:refname
